import React, {useContext, useState} from 'react';
import "./search.scss"
import {CustomContext} from "../../../Context";

const Search = () => {

    const {t,value, setValue} = useContext(CustomContext)
    const changeValue = (event) => {
        setValue(event.target.value)
    }
    return (
        <div>
            <label className={'search'}>
                <span className={'search__loop'}>
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd"
      d="M1 7.14554C0.999557 4.21437 3.06975 1.69108 5.94452 1.11883C8.81929 0.546586 11.698 2.08477 12.82 4.79267C13.9421 7.50057 12.995 10.624 10.558 12.2528C8.12104 13.8815 4.87287 13.562 2.8 11.4895C1.64763 10.3376 1.00014 8.77495 1 7.14554Z"
      stroke="#7D818E" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M11.4883 11.4905L14.9993 15.0015" stroke="#7D818E" strokeWidth="1.5" strokeLinecap="round"
      strokeLinejoin="round"/>
</svg>
                </span>
                <input value={value} onChange={changeValue} placeholder={t("about.search")} className={'search__input'}
                       type="text"/>
                {
                    value ? <span onClick={() => setValue('')} className={'search__close'}>
                    <svg width="10" height="10" viewBox="0 0 10 10" fill="#00000080" xmlns="http://www.w3.org/2000/svg">
<path
    d="M1.13569 7.80299C0.842792 8.09589 0.842792 8.57076 1.13569 8.86365C1.42858 9.15655 1.90345 9.15655 2.19635 8.86365L1.13569 7.80299ZM5.52968 5.53032C5.82257 5.23743 5.82257 4.76255 5.52968 4.46966C5.23679 4.17677 4.76191 4.17677 4.46902 4.46966L5.52968 5.53032ZM4.46902 4.46966C4.17613 4.76255 4.17613 5.23743 4.46902 5.53032C4.76191 5.82321 5.23679 5.82321 5.52968 5.53032L4.46902 4.46966ZM8.86301 2.19699C9.15591 1.90409 9.15591 1.42922 8.86301 1.13633C8.57012 0.843433 8.09525 0.843433 7.80235 1.13633L8.86301 2.19699ZM5.52968 4.46966C5.23679 4.17677 4.76191 4.17677 4.46902 4.46966C4.17613 4.76255 4.17613 5.23743 4.46902 5.53032L5.52968 4.46966ZM7.80235 8.86365C8.09525 9.15655 8.57012 9.15655 8.86301 8.86365C9.15591 8.57076 9.15591 8.09589 8.86301 7.80299L7.80235 8.86365ZM4.46902 5.53032C4.76191 5.82321 5.23679 5.82321 5.52968 5.53032C5.82257 5.23743 5.82257 4.76255 5.52968 4.46966L4.46902 5.53032ZM2.19635 1.13633C1.90345 0.843433 1.42858 0.843433 1.13569 1.13633C0.842792 1.42922 0.842792 1.90409 1.13569 2.19699L2.19635 1.13633ZM2.19635 8.86365L5.52968 5.53032L4.46902 4.46966L1.13569 7.80299L2.19635 8.86365ZM5.52968 5.53032L8.86301 2.19699L7.80235 1.13633L4.46902 4.46966L5.52968 5.53032ZM4.46902 5.53032L7.80235 8.86365L8.86301 7.80299L5.52968 4.46966L4.46902 5.53032ZM5.52968 4.46966L2.19635 1.13633L1.13569 2.19699L4.46902 5.53032L5.52968 4.46966Z"/>
</svg>
                </span> : ''
                }

            </label>
        </div>
    );
};

export default Search;